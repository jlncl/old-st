[{"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\reportWebVitals.js":"1","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\index.tsx":"2","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\App.tsx":"3","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\TitleBar\\TitleBar.tsx":"4","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\view\\Home\\Home.tsx":"5","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\view\\Home\\index.tsx":"6","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\ProductCard\\index.tsx":"7","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\ProductCard\\ProductCard.tsx":"8","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\Loader\\index.tsx":"9","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\Loader\\Loader.tsx":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":500,"mtime":1606836230436,"results":"13","hashOfConfig":"12"},{"size":870,"mtime":1607017233804,"results":"14","hashOfConfig":"12"},{"size":140,"mtime":1606910118397,"results":"15","hashOfConfig":"12"},{"size":4190,"mtime":1607018872128,"results":"16","hashOfConfig":"12"},{"size":46,"mtime":1606890482390,"results":"17","hashOfConfig":"12"},{"size":67,"mtime":1607005949957,"results":"18","hashOfConfig":"12"},{"size":3841,"mtime":1607078412008,"results":"19","hashOfConfig":"12"},{"size":52,"mtime":1607005956388,"results":"20","hashOfConfig":"12"},{"size":1515,"mtime":1607008153569,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1g7qm2x",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\reportWebVitals.js",[],["46","47"],"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\index.tsx",[],["48","49"],"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\App.tsx",["50","51"],"import React, { Suspense } from 'react';\nimport './App.css';\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport { TitleBar } from './common/TitleBar/TitleBar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home } from './view/Home';\n\nlet theme = createMuiTheme({\n  typography: {\n    fontFamily: `'Space Mono', 'monospace'`,\n    body1: {\n      fontSize: 12,\n    }\n  },\n});\ntheme = responsiveFontSizes(theme);\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className=\"scrollableDiv container\" style={{height: '100%', overflowY: 'auto' }}>\n          <TitleBar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\TitleBar\\TitleBar.tsx",[],"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\view\\Home\\Home.tsx",["52","53","54","55"],"import React, { useEffect, useState } from 'react';\r\nimport { ProductCard } from '../../common/ProductCard';\r\nimport response from './../../constant/response.json';\r\nimport { createStyles, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { IProduct } from '../../interface/Product';\r\nimport { Loader } from '../../common/Loader';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\ncreateStyles({\r\n  root: {\r\n    color: 'white',\r\n    padding: 'calc(25px + 5vmin)',\r\n    textAlign: 'center',\r\n  },\r\n  header: {\r\n  },\r\n  subHeader: {\r\n    color: '#6b6465',\r\n    display: 'block',\r\n    marginBottom: 30,\r\n  },\r\n  sort: {\r\n    '& span': {\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n      selected: {\r\n        color: '#c3989e',\r\n      },\r\n      '&:hover': {\r\n        color: '#c3989e',\r\n      }\r\n    }\r\n  },\r\n  bottom: {\r\n    marginTop: 30,\r\n  },\r\n}),\r\n);\r\n\r\nconst Home = () => {\r\n  const limit = 50;\r\n\r\n  const [data, setData] = useState<IProduct[]>(null);\r\n  const [total, setTotal] = useState(limit);\r\n  const [hasMore, setHasMore] = useState<boolean>(true);\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const [isLoadingMore, setLoadingMore] = useState<boolean>(false);\r\n  const classes = useStyles();\r\n\r\n  const sortBySize = () => {\r\n    const temp = response.data.sort((a, b) => b.size - a.size);\r\n    loadData(temp);\r\n  };\r\n\r\n  const sortByPrice = () => {\r\n    const temp = response.data.sort((a, b) => b.price - a.price);\r\n    loadData(temp);\r\n  };\r\n\r\n  const sortById = () => {\r\n    const temp = response.data.sort((a, b) => a.id - b.id);\r\n    loadData(temp);\r\n    console.log(temp)\r\n  };\r\n\r\n  const loadData = (data: IProduct[]) => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setData(data);\r\n    }, 2000);\r\n  };\r\n\r\n  const loadMoreData = () => {\r\n    const newTotal = (total+limit) > response.data.length ? response.data.length : (total+limit);\r\n    setData(data.concat(response.data.slice(total+1, newTotal)));\r\n    setTotal(newTotal);\r\n  };\r\n\r\n  const sortBy = (type: string) => {\r\n    if (type === 'size') { sortBySize(); }\r\n    if (type === 'price') { sortByPrice(); }\r\n    if (type === 'id') { sortById(); }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(response.data.slice(0, limit));\r\n    setTotal(limit);\r\n    console.log(response.data.length)\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.header} component=\"h3\" variant=\"h6\">\r\n        Select a kaomoji to buy\r\n      </Typography>\r\n      <Typography className={classes.subHeader} component=\"body\" variant=\"body1\">\r\n        click an item to see its actual size\r\n      </Typography>\r\n      <Typography className={classes.subHeader} component=\"body\" variant=\"body1\">\r\n        Sort by\r\n        <div className={classes.sort}>\r\n          <span onClick={() => sortBy('size')}>size</span> -&nbsp;\r\n          <span onClick={() => sortBy('price')}>price</span> -&nbsp;\r\n          <span onClick={() => sortBy('id')}>id</span>\r\n        </div>\r\n      </Typography>\r\n      {\r\n        isLoading ?\r\n        <Loader />\r\n        : data && data.length > 0 ?\r\n          <InfiniteScroll\r\n            dataLength={response.data.length}\r\n            next={() => {\r\n              setTimeout(() => {\r\n                loadMoreData()\r\n              }, 2000)\r\n            }}\r\n            hasMore={total === response.data.length ? false : true}\r\n            loader={<div className={classes.bottom}><Loader /></div>}\r\n            endMessage={\r\n              <div className={classes.bottom}>No more items to load.</div>\r\n            }\r\n            scrollableTarget=\"scrollableDiv\"\r\n            style={{overflow: 'hidden'}}\r\n          >\r\n            <Grid container spacing={3}>\r\n              {data.map((item: IProduct, i: number) => {\r\n                return (\r\n                  <Grid item xs key={i}>\r\n                    <ProductCard data={item} />\r\n                  </Grid>\r\n                )\r\n              })}\r\n            </Grid>\r\n          </InfiniteScroll>\r\n          : 'No items to display. :('\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\view\\Home\\index.tsx",[],"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\ProductCard\\index.tsx",[],"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\ProductCard\\ProductCard.tsx",[],"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\Loader\\index.tsx",[],"C:\\Users\\nikki\\Documents\\Workspaces\\old-st\\src\\common\\Loader\\Loader.tsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"64","line":7,"column":8,"nodeType":"62","messageId":"63","endLine":7,"endColumn":15},{"ruleId":"60","severity":1,"message":"65","line":46,"column":10,"nodeType":"62","messageId":"63","endLine":46,"endColumn":17},{"ruleId":"60","severity":1,"message":"66","line":46,"column":19,"nodeType":"62","messageId":"63","endLine":46,"endColumn":29},{"ruleId":"60","severity":1,"message":"67","line":48,"column":10,"nodeType":"62","messageId":"63","endLine":48,"endColumn":23},{"ruleId":"60","severity":1,"message":"68","line":48,"column":25,"nodeType":"62","messageId":"63","endLine":48,"endColumn":39},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'classes' is defined but never used.","'hasMore' is assigned a value but never used.","'setHasMore' is assigned a value but never used.","'isLoadingMore' is assigned a value but never used.","'setLoadingMore' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]